3.1.1常用软件包管理工具简介
	交互方式分类
		类别	常用工具举例	描述
		命令行	dpkg-deb、dpkg、apt			在命令行模式下完成软件包管理任务，为完成软件包
	的获取、查询、软件包依赖性检查、安装、卸载等任务，需要使用各自不同的命令；
		文本窗口界面	dselect、aptitude、tasksel		在文本窗口模式中，使用窗口和菜单可以完成软件包的管理任务;
		图形界面	synaptic		在X—Window图形桌面环境中运行，具有更好的交互性、可读性、易读性

3.2.2 3个重要的配置文件
	1.apt镜像的地址文件
		/etc/apt/sources.list
		典型的文件格式：
		deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates main restricted
		deb-src http://us.archive.ubuntu.com/ubuntu/ trusty-updates main restricted
	2.本地索引列表
		/var/lib/apt/lists
	3.本地文件下载缓存
		/var/cache/apt/archives
		通常apt的cron脚本将会限制这个目录占用的存储空间及文件的存放时间；
3.2.3 apt-get工具集合
	1.apt-get命令
	命令格式：apt-get subcommands [ -d | -f | -m | -q | --purge | --reinstall | - b | - s | - y | - U | -h | -v ] pkg
		子命令	
			+----------------|---------------------------------------------------------------------------------+
			|	子命令		 |   				描述                                                           | 
			|update			 |   	下载更新软件包列表信息                                                     |      
			|upgrade		 |   	将系统中所有的软件包升级到最新版本										   |
			|install		 |   	下载所需安装包并进行安装配置                                               |      
			|remove			 |   	卸载软件包																   |  
			|autoremove		 |   	将不满足依赖关系的软件包自动卸载                                           |      
			|source			 |   	下载源码包                                                                 |    
			|build-dep		 |   	为源码包构建所需的编译环境                                                 | 
			|dist-upgrade	 |   	发布版升级                                                                 |  
			|clean			 |   	删除缓存区所有已下载的包文件                                               |          
			|dselct-upgrade	 |   	根据dselect的选择来进行软件包升级                                          |  
			|autoclean		 |   	删除缓存区中老版本的已下载包文件                                           |     
			|check			 |   	检查系统中依赖关系的完整性                                                 |  
			+----------------|---------------------------------------------------------------------------------+
		选项
			+---------------|----------------------------------------------------------------------------------+
			|选项			|				描述                                                               |      
			|-d				|		仅下载软件包，而不安装或解压                                               |      
			|-f				|		修复系统中存在的软件包依赖性问题                                           |      
			|-m				|		当发现缺少关联软件包时，仍试图继续执行                                     |       
			|-q				|		讲输出作为日志保留，不获取命令执行进度                                     |         
			|-purge			|		与remove子命令一起使用，完全卸载软件包                                     |      
			|-reinstall		|		与install子命令一起使用，重新安装软件包                                    |      
			|-b				|		在下载完源码包后，编译生成相应的软件包                                     |            
			|-s				|		不做实际操作，只是模拟命令执行结果										   | 		    
			|-y				|		对所有的询问都做肯定回答，apt-get不在进行任何提示                          |            
			|-u				|		获取已升级的软件包列表                                                     |    
			|-h				|		获取帮助信息                                                               |          
			|-v				|		获取apt-get版本号                                                          |          
			+---------------|----------------------------------------------------------------------------------+
	2.刷新软件源
		配置文件：source.list,告知软件源镜像站点的地址，使用apt-get update命令刷新软件源，建立一个更新软件包列表。
		为软件包建立索引文件，存放在本地/var/lib/apt/lists中
	3.更新软件包
		apt-get upgrade
	4.安装软件包
		apt-get install
	5.重新安装软件包
		apt-get --reinstall install
	6.卸载软件包
		(1)不完全卸载：删除一个软件包，将会连带删除与该软件包有依赖关系的软件包
			apt-get remove
		(2)完全卸载：在卸载软件包文件的同时，还删除该软件包所使用的配置文件.
			apt-get --purge remove
	7.修复软件包的依赖关系
		由于某些故障，导致依赖关系破坏，软件既不能重装也不不能删除，需要修复。
		修复软件包的依赖关系
			apt-get -f install 
		检查依赖关系
			apt-get check
	8.清理软件包缓冲区
		清理整个软件包缓冲区，除了lock锁文件和partial目录
			apt-get clean
		缓冲区只保留最新版本的软件包，多余版本全部删掉
			apt-get autoclean

3.2.4 apt-cache工具集
	1.apt-cache命令
		软件包管理工具：可以实现查询软件源和软件包的相关信息及包依赖关系等功能。
		apt-cache [-hvsn] [-o=config string] [-c=file] {[gencaches] | [showpkg pkg ...] | 
			[showsrc pkg...] | [stats] | [dump] | [dumpavail] |  [unmet] | [search regex] |
			[show pkg...] | [depends pkg...] | [rdepends pkg...] | [pkgnames prefix] |
			[dotty okg...] | [xvcq pkg...] | [policy pkgs...] | [madison pkgs...]}
			+--------------------|-------------------------------------------------------------------------------+
			|子命令				 |   	 描述                                                                    |  
			|showpkg			 |   获取二进制软件包的常规描述信息                                              |  
			|showsrc			 |   获取源码包的详细信息                                                        |    
			|show				 |   获取二进制软件包的详细描述信息                                              |   
			|stats				 |   获取软件源的基本统计信息                                                    |    
			|dump				 |   获取软件源中所有软件包的简要信息                                            |       
			|dumpavail			 |   获取当前中已安装的若有软件包的简要信息                                      |         
			|unmet				 |   获取所有未满足的依赖信息                                                    |   
			|search				 |   根据正则表达式检索软件包                                                    | 
			|depends			 |   获取该软件包的依赖信息                                                      | 
			|rdepends			 |   获取所有依赖于该软件包的软件包                                              |       
			|pkgnameg			 |   列出所有已安装软件包的名字                                                  |           
			|policy				 |   获取软件包当前的安装状态                                                    |  
			+--------------------|-------------------------------------------------------------------------------+

			+--------------------|-------------------------------------------------------------------------------+
			|	选项			 |   	描述																	 |
			|	-p				 |   软件包缓存                                                                  |    
			|	-s				 |   源代码包的缓存                                                              |      
			|	-q				 |   关闭进度获取                                                                |    
			|	-i				 |   获取重要的依赖关系，仅与unmet命令一起使用									 | 
			|	-c				 |   读取指定配置文件                                                            |         
			|	-h				 |   获取帮助信息                                                                |       
			+--------------------|-------------------------------------------------------------------------------+

	2.查询数据源的相关统计信息
		apt-cache stats
	3.查询已安装的软件包
		apt-cache pkgnames
		获得目前系统中所有已安装软件包
			apt-cache pkgnames | wc -l
	4.按关键字查询
		apt-cache serch
		查询以“ls”开头的软件包列表
			apt-cache search ls|grep ^ls
	5.获取软件包的详细信息
		apt-cache show 软件包名
	6.获取所有软件包的详细信息
		apt-cache dumpavail
	7.获取软件包的常规信息
		apt-cache showpkg 软件包的名字
	8.获取软件包的安装状态
		apt-cache policy 软件包的名字
	9.查询软件包的依赖关系
		apt-cache depends 软件包的名字
	10.查询软件包的反向依赖关系
		apt-cache rdepens 软件包的名字
	11.清除软件包的.deb文档
		apt-get autoclean
	
				    








