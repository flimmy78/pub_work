5.1-线程基本编程
    1.创建线程：pthread_create();
    2.结束当前线程：pthread_exit();
    3.等待线程结束：pthred_join();
    4.取消线程：pthread_cancel();
    5.取消线程之前，要在需要取消的线程内部调用pthread_setcancle()
    函数和pthread_setcanclestyle()函数设置相应的取消状态；

5.2-线程之间的同步与互斥（POSIX中线程的同步与互斥机制：互斥锁与信号量）
    1.互斥锁初始化：pthread_mutex_init();
    2.互斥锁上锁：pthread_mutex_lock();
    3.互斥锁判断上锁：pthread_mutex_trylock();
    4.互斥锁解锁：thread_mutex_unlock();
    5.消除互斥锁：thread_mutex_destroy();

5.5.2-信号量线程控制(PV原子操作，用于进程或线程间的同步与互斥，信号量本质
        是一个非负整数的计数器，用来控制对公共资源的访问)
    1.sem_init();
    2.sem_wait()与sem_trywait();
    3.sem_post();
    4.sem_getvalue();
    5.sem_destroy();
